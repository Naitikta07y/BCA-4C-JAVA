//Naitikta_7148
import java.util.Scanner;

class EMPLOYEE {
    private String NameOfEmp;
    private int EmpId;
    private double BasicSalary;
    private double GrossSalary;

    // Constructor to initialize data members
    public EMPLOYEE(String NameOfEmp, int EmpId, double BasicSalary) {
        this.NameOfEmp = NameOfEmp;
        this.EmpId = EmpId;
        this.BasicSalary = BasicSalary;
        calculateGrossSalary();
    }

    // Method to calculate GrossSalary
    private void calculateGrossSalary() {
        double HRA = 0.25 * BasicSalary;
        double DA = 0.40 * BasicSalary;
        GrossSalary = BasicSalary + HRA + DA;
    }

    // Method to get NameOfEmp
    public String getNameOfEmp() {
        return NameOfEmp;
    }

    // Method to get EmpId
    public int getEmpId() {
        return EmpId;
    }

    // Method to get GrossSalary
    public double getGrossSalary() {
        return GrossSalary;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        EMPLOYEE[] employees = new EMPLOYEE[3]; // Assuming 3 employees for demonstration
        
        // Input data for employees
        for (int i = 0; i < employees.length; i++) {
            System.out.println("Enter details for employee " + (i + 1) + ":");
            System.out.print("Name: ");
            String name = scanner.nextLine();
            System.out.print("ID: ");
            int id = scanner.nextInt();
            System.out.print("Basic Salary: ");
            double basicSalary = scanner.nextDouble();
            scanner.nextLine(); // Consume newline
            employees[i] = new EMPLOYEE(name, id, basicSalary);
        }

        // Query a) Display the NameOfEmp and GrossSalary of employees whose name starts With a consonant.
        System.out.println("\nEmployees whose name starts with a consonant:");
        for (EMPLOYEE emp : employees) {
            if (!isVowel(emp.getNameOfEmp().charAt(0))) {
                System.out.println("Name: " + emp.getNameOfEmp() + ", Gross Salary: " + emp.getGrossSalary());
            }
        }

        // Query b) Display the Emp-Id and GrossSalary of Employees whose Emp-Id is between 101 and 150.
        System.out.println("\nEmployees with ID between 101 and 150:");
        for (EMPLOYEE emp : employees) {
            if (emp.getEmpId() >= 101 && emp.getEmpId() <= 150) {
                System.out.println("ID: " + emp.getEmpId() + ", Gross Salary: " + emp.getGrossSalary());
            }
        }

        // Query c) Count the total number of Employees whose GrossSalary is less than 35000/-
        int count = 0;
        for (EMPLOYEE emp : employees) {
            if (emp.getGrossSalary() < 35000) {
                count++;
            }
        }
        System.out.println("\nTotal number of employees with Gross Salary less than 35000: " + count);
    }

    // Method to check if a character is a vowel
    private static boolean isVowel(char c) {
        return "aeiouAEIOU".indexOf(c) != -1;
    }
}
